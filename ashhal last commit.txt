"use client";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { fetchVets } from "../store/slices/vetSlice";
import Navbar from "@/components/navbar";
import VetFilterSection from "@/components/VetFilterSelection";
import { RootState, AppDispatch } from "../store/store";

export default function PetCare() {
  const dispatch = useDispatch<AppDispatch>();
  const { vets, loading, error } = useSelector((state: RootState) => state.vets);

  // State for filter inputs
  const [filters, setFilters] = useState({
    degree: "",
    city: ""
  });

  useEffect(() => {
    dispatch(fetchVets());
  }, [dispatch]);

  // Reset filters to their initial state
  const handleReset = () => {
    setFilters({
      degree: "",
      city: ""
    });
  };

  // Handle search operation
  const handleSearch = () => {
    console.log("Searching with filters:", filters);
  };

  // Filter vets based on the current filters
  const filteredVets = vets.filter((vet) => {
    const matchesQualification = filters.degree ? vet.degree.includes(filters.degree) : true;
    const matchesCity = filters.city ? vet.city.includes(filters.city) : true;

    return matchesQualification && matchesCity;
  });

  return (
    <>
      <Navbar />
      <div className="fullBody">
        <VetFilterSection
          onSearch={(filters) =>
            setFilters((prev) => ({ ...prev, ...filters }))
          }
        />
        <main className="flex min-h-screen flex-col items-center p-8 bg-gray-100">
          <h1 className="text-2xl font-bold mt-0"
              style={{ margin: "2px auto"}}  >Meet Our Vets</h1>

          {loading ? (
          <p>Loading vets...</p>
        ) : error ? (
          <p>Error: {error}</p>
        ) : vets.length > 0 ? (
          <div className="flex flex-col items-center gap-8 mt-8">
          {vets.map((vet) => (
            <div
              key={vet.vet_id}
              className="border rounded-lg shadow p-10 bg-white w-full max-w-5xl mb-8 relative"
              style={{ margin: "10px auto" }} // Adding a little space on left and right
            >
              <h2 className="text-2xl font-bold">{vet.clinic_name}</h2>
              <p className="text-gray-500">Location: {vet.location}</p>
              <p className="text-gray-500">Minimum Fee: PKR {vet.minimum_fee}</p>
              <p className="text-gray-500">Contact: {vet.contact_details}</p>
              <p className="text-gray-500">Bio: {vet.bio}</p>
              <p
                className={`text-sm ${
                  vet.profile_verified ? "text-green-500" : "text-red-500"
                }`}
              >
                {vet.profile_verified ? "Verified" : "Not Verified"}
              </p>

              {/* Book Now button in the bottom-right corner */}
              <button
                className="absolute bottom-4 right-4 text-white p-2 rounded-2xl w-32"
                style={{ backgroundColor: "#A03048" }}
              >
                Book Now
              </button>
            </div>
          ))}
        </div>
        ) : (
          <p>No vets available at the moment.</p>
        )}
        </main>
      </div>
    </>
  );
}

'use client';
import { useDispatch, useSelector } from "react-redux";
import { useEffect, useState } from "react";
import { RootState, AppDispatch } from "../app/store/store"; // Import store types
import { fetchCities } from "../app/store/slices/citiesSlice"; // Fetch cities from store
import { fetchQualifications } from "../app/store/slices/qualificationsSlice"; // Fetch qualifications from store

interface VetFilterSectionProps {
    onSearch: (filters: {
        selectedCity: string;
        selectedQualification: string;
    }) => void;
}

const VetFilterSection: React.FC<VetFilterSectionProps> = ({ onSearch }) => {
    const dispatch = useDispatch<AppDispatch>();
    const { cities } = useSelector((state: RootState) => state.cities); // Get cities from the store
    const { qualifications } = useSelector((state: RootState) => state.qualifications); // Get qualifications from the store

    const [selectedCity, setSelectedCity] = useState("");
    const [selectedQualification, setSelectedQualification] = useState("");

    // Fetch cities and qualifications on component mount
    useEffect(() => {
        dispatch(fetchCities());
        dispatch(fetchQualifications());
    }, [dispatch]);

    const handleReset = () => {
        setSelectedCity("");
        setSelectedQualification("");
        onSearch({ selectedCity: "", selectedQualification: "" });
    };

    const handleSearch = () => {
        onSearch({ selectedCity, selectedQualification });
    };

    return (
        <div className="bg-gray-100 pt-6">
            <div
                className="bg-white px-8 py-2 w-700"
                style={{ margin: "0px 20px", borderRadius: "2rem" }}>
                <div className="flex flex-wrap gap-4 mb-4 mt-4 items-center">
                    {/* Qualifications dropdown */}
                    <div className="flex-1 min-w-[150px]">
                        <label className="text-xs">Qualification</label>
                        <select
                            className="w-full p-3 border rounded-xl"
                            value={selectedQualification}
                            onChange={(e) =>
                                setSelectedQualification(e.target.value)
                            }>
                            <option value="">Select Qualification</option>
                            {qualifications.map((qualification) => (
                                <option
                                    key={qualification.id}
                                    value={qualification.id}>
                                    {qualification.name}
                                </option>
                            ))}
                        </select>
                    </div>

                    {/* Cities dropdown */}
                    <div className="flex-1 min-w-[150px]">
                        <label className="text-xs">City</label>
                        <select
                            className="w-full p-3 border rounded-xl"
                            value={selectedCity}
                            onChange={(e) => setSelectedCity(e.target.value)}>
                            <option value="">Select City</option>
                            {cities.map((city) => (
                                <option key={city.city_id} value={city.city_id}>
                                    {city.city_name}
                                </option>
                            ))}
                        </select>
                    </div>

                    {/* Buttons */}
                    <div className="flex gap-4 mt-4">
                        <button
                            className="border-2 border-primary text-primary bg-white p-3 rounded-2xl"
                            onClick={handleReset}>
                            Reset
                        </button>
                        <button
                            className="text-white p-3 rounded-2xl w-40"
                            style={{ backgroundColor: "#A03048" }}
                            onClick={handleSearch}>
                            Search
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default VetFilterSection;

